@model CompareViewModel

<div class="container mt-5">
    <div class="row">
        <div class="col-lg-6 mx-auto">
            <h1 class="text-center">Player Comparison</h1>

            <form method="post">
                <div class="form-group">
                    <label for="player1Name">Enter Player 1 Name:</label>
                    <input type="text" id="player1Name" name="player1Name" class="form-control" required>
                    <div id="player1Dropdown" class="dropdown">
                        <ul id="player1DropdownList" class="dropdown-content"></ul>
                    </div>
                </div>
                <div class="form-group">
                    <label for="player2Name">Enter Player 2 Name:</label>
                    <input type="text" id="player2Name" name="player2Name" class="form-control" required>
                    <div id="player2Dropdown" class="dropdown">
                        <ul id="player2DropdownList" class="dropdown-content"></ul>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Compare Players</button>
            </form>

            @if (Model != null)
            {
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger mt-3">
                        @Model.ErrorMessage
                    </div>
                }

                @if (Model.Player1 != null && Model.Player2 != null)
                {
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h2>Player 1</h2>
                                </div>
                                <div class="card-body">
                                    <p>Name: @Model.Player1.first_name @Model.Player1.second_name</p>
                                    <p>Position: @Model.Player1.element_type</p>
                                    <p>Goals Scored: @Model.Player1.goals_scored</p>
                                    <p>Assists: @Model.Player1.assists</p>
                                    <p>Influence: @Model.Player1.influence</p>
                                    <p>Threat: @Model.Player1.threat</p>
                                    <p>FPL Cost: @Model.Player1.now_cost</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h2>Player 2</h2>
                                </div>
                                <div class="card-body">
                                    <p>Name: @Model.Player2.first_name @Model.Player2.second_name</p>
                                    <p>Position: @Model.Player2.element_type</p>
                                    <p>Goals Scored: @Model.Player2.goals_scored</p>
                                    <p>Assists: @Model.Player2.assists</p>
                                    <p>Influence: @Model.Player2.influence</p>
                                    <p>Threat: @Model.Player2.threat</p>
                                    <p>FPL Cost: @Model.Player2.now_cost</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateDropdown(input, dropdown, dropdownList) {
            var filter = input.value.toUpperCase();
            var items = dropdownList.getElementsByTagName("li");
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (item.textContent.toUpperCase().indexOf(filter) > -1) {
                    item.style.display = "";
                } else {
                    item.style.display = "none";
                }
            }
            dropdown.classList.add("is-active");
        }

        $(document).ready(function () {
            $("#player1Name").on("input", function () {
                var playerName = this.value;
                var player1Dropdown = document.getElementById("player1Dropdown");
                var player1DropdownList = document.getElementById("player1DropdownList");

                player1DropdownList.innerHTML = "";

                var matchingPlayers = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Players))
                .filter(player => player.second_name.toLowerCase().includes(playerName.toLowerCase()))
                        .slice(0, 10);

                matchingPlayers.forEach(player => {
                    var listItem = document.createElement("li");
                    listItem.textContent = `${player.second_name}`;
                    listItem.addEventListener("click", function () {
                        document.getElementById("player1Name").value = listItem.textContent;
                        player1Dropdown.classList.remove("is-active");
                    });
                    player1DropdownList.appendChild(listItem);
                });

                updateDropdown(this, player1Dropdown, player1DropdownList);
            });

            $("#player2Name").on("input", function () {
                var playerName = this.value;
                var player2Dropdown = document.getElementById("player2Dropdown");
                var player2DropdownList = document.getElementById("player2DropdownList");

                player2DropdownList.innerHTML = "";

                var matchingPlayers = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Players))
                .filter(player => player.second_name.toLowerCase().includes(playerName.toLowerCase()))
                        .slice(0, 10);

                matchingPlayers.forEach(player => {
                    var listItem = document.createElement("li");
                    listItem.textContent = `${player.second_name}`;
                    listItem.addEventListener("click", function () {
                        document.getElementById("player2Name").value = listItem.textContent;
                        player2Dropdown.classList.remove("is-active");
                    });
                    player2DropdownList.appendChild(listItem);
                });

                updateDropdown(this, player2Dropdown, player2DropdownList);
            });


        });
    </script>
}
